
Steps taken in setting this up

1) Created directory
2) Copied requirements.txt and .gitignore
3) Ran

   > virtualenv venv

4) activated via

   > venv\Scripts\activate

5) > pip install -r requirements.txt
  

6) > django-admin startproject web

7) > cd web

8) > python manage.py migrate

9) > python manage.py runserver

check http://localhost:8000 shows up.  Yes.

10) As per https://docs.djangoproject.com/en/1.8/intro/tutorial01/
    lets create app, via

   > python manage.py startapp mysite

11) I wanted to create a user admin account.  I did this by

   > python manage.py syncdb

There is probably a better way

12) Now want to try the zinnia blog stuff.  Modify settings.py

Added

SITE_ID = 1

and added to INSTALLED_APPS section:

    'django.contrib.sites',
    'django_comments',
    'mptt',
    'tagging',
    'zinnia',
    'mysite',

Notice mysite, is the app we created ourselves, the other are zinnia related.

Also add to settings.py

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'zinnia.context_processors.version',  # Optional
                'django.core.context_processors.i18n',
                'django.core.context_processors.request',
                'django.core.context_processors.media',
                'django.core.context_processors.static',
            ],
        },
    },
]

We also added to urls.py

blog_urls = [
    url(r'^', include('zinnia.urls.capabilities')),
    url(r'^search/',  include('zinnia.urls.search')),
    url(r'^sitemap/', include('zinnia.urls.sitemap')),
    url(r'^trackback/', include('zinnia.urls.trackback')),
    url(r'^blog/tags/', include('zinnia.urls.tags')),
    url(r'^blog/feeds/', include('zinnia.urls.feeds')),
    url(r'^blog/random/', include('zinnia.urls.random')),
    url(r'^blog/authors/', include('zinnia.urls.authors')),
    url(r'^blog/categories/', include('zinnia.urls.categories')),
    url(r'^blog/comments/', include('zinnia.urls.comments')),
    url(r'^blog/', include('zinnia.urls.entries')),
    url(r'^blog/', include('zinnia.urls.archives')),
    url(r'^blog/', include('zinnia.urls.shortlink')),
    url(r'^blog/', include('zinnia.urls.quick_entry'))
]

13) > python manage.py migrate

14) > python mange.py runserver

when I try to use the url localhost:8000 I get an exception
KeyError 'request' and and error for line 22 of 
C:\GitHub\WorldViews\site36\venv\lib\site-packages\zinnia\templates\zinnia\base.html

which is the line

{% zinnia_breadcrumbs %}

15) I will try to come back to that.  For now I add directory

  site36\web\mysite\templates


in c:/GitHub/WorldViews/site36/web/mysite/views.py I added:

    from django.shortcuts import redirect, render_to_response, render
    from django.template import Context, RequestContext
    from django.http import HttpResponse

    def hello(request):
        return HttpResponse("Hello world")

    def about(request):
        return render_to_response('about.html', locals(), RequestContext(request))

in c:/GitHub/WorldViews/site36/web/web/urls.py I added

    from mysite.views import hello, about

and below

    url(r'^hello/', hello),
    url(r'^about/', about),

16) Now I do
    > python manage.py runserver

and the url localhost:8000/hello works to give "Hello World"

17) In the C:\GitHub\WorldViews\site36\web\mysite\templates directory
I put an about.html with just text "This is about.html".

18) Now the url localhost:8000/about works and shows what was in the about.html

19) I had a lot of trouble getting the blog to show up for the URL

   localhost:8000/blog/

It seems that ultimately the thing that fixed this was adding this

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.core.context_processors.request',
)

to the settings file.  This seems redundant with the
options under templates.  I'm guessing that this may
be something that changed from django 1.7.  Maybe in
django 1.7 you need to have these TEMPLATE_CONTEXT_PROCESSORS
as global variable like that, and later it was moved to
the context_processors option under TEMPLATES.

20) Anyway, now it seems to work as an out of the box
(yeah, right - more like out of box and then bang your
head against wall for 6 hours) blog.

21) Next big problem was getting it to see our own
style files for base.html and skeleton.html.  I ended
up getting that to work by modifying settings.py and
putting "mysite" as the first installed app.  (It had
been the last.)

Tip - I changed views so that the /about/ url would
fail to find a template, so that the diagnostic showed
the order in which directories were searched.

I also tried modifying the DIRS path in the TEMPLATES
item, but that didn't seem to be honored.

22) Ok, now I can modify base and skeleton in
C:\GitHub\WorldViews\site36\web\mysite\templates\zinnia
and the effects show up.

23) Created static dirs

C:\GitHub\WorldViews\site36\web\mysite\static\zinnia\theme\css

and put modified versions of screen.css there.  It did not show up,
that is, did not seem to be used.  Then i modified the file
skeleton.html to include ".../myscreen.css" instead of screen.css
and it works, at getting myscreen.css.  In this way, i was able to
get my own logo.

It appears that the search path for finding css files, and images
is not under good control at this point.  Perhaps there is a setting
for it we can change later.

24) Now put on heroku.  That required just a Procfile, edited to
point to the right location for manage.py.











